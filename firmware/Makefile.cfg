VPATH = $(SRCDIR)

# setup

#AUX_OPTS = -Wall -g -O1

INCLUDE_DIRS = -I. -I$(SRCDIR) -I$(SRCDIR)/lib/core -I$(SRCDIR)/lib/device -I$(SRCDIR)/lib/periph -I$(SRCDIR)/lib/usb
LIBRARY_DIRS = -L. -L$(SRCDIR) -Llib -Llib/usb
LDFLAGS = $(CPU_OPTS) -Wl,--gc-sections,-Map=$@.map,-cref,-u,Reset_Handler,--no-wchar-size-warning $(INCLUDE_DIRS) $(LIBRARY_DIRS) -T $(SRCDIR)/config.ld

TARGET = main
TARGET_ELF = $(TARGET).elf
TARGET_BIN = $(TARGET).bin
TARGET_DMP = $(TARGET).dmp

# all

all: $(TARGET_ELF) $(TARGET_BIN) $(TARGET_DMP) ;

# main

LW_STDIO_SRCS =

SRCS = $(LW_STDIO_SRCS) \
	usb_desc.c \
	hw_config.c \
	stm32f10x_it.c \
	fifo.c \
	bus-spi.c \
	main.c

-include $(SRCS:.c=.dep)

%.dep: %.c version.h
	@set -e; rm -f $@; \
	$(CC) -MM $(CFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	$(RM) $@.$$$$

$(TARGET_ELF): $(SRCS:.c=.o) lib/libstm32.a lib/usb/libstm32usb.a
	$(LD) $(LDFLAGS) -o $@ $+

$(TARGET_BIN): $(TARGET_ELF)
	$(OBJCP) $(OBJCPFLAGS) $< $@

$(TARGET_DMP): $(TARGET_ELF)
	arm-none-eabi-objdump -d $< > $@

version.h: version.txt
	echo "#define _VERSION `cat $< | sed 's/^\\([0-9]\\)\\+\\.\\([0-9]\\)\\+/(\\1*256+\\2)/'`" > $@
	echo "#define _VERSION_STR \"`cat $<`\"" >> $@


# flash

get-device-id:
	@openocd -f jtag/openocd.cfg -c 'stm32x options_read 0' -c reset -c shutdown 2>&1 | perl -e 'while(<>){print "$$1\n" if(/^Info : device id = 0x([0-9a-fA-F]+)/);}'

reset:
	openocd -f jtag/reset.cfg

install: prog ;

prog: $(TARGET_ELF)
	openocd -f jtag/prog.cfg -l prog.log

dump:
	openocd -f jtag/read.cfg -l read.log

run-debug-server:
	killall openocd && sleep 2 || true
	screen -d -m openocd -f jtag/debug.cfg -l openocd.log

stop-debug-server:
	killall openocd

debug:
#	setsid openocd -f jtag/debug.cfg -l jtag/openocd.log > /dev/null 2>&1
	screen -d -m openocd -f jtag/debug.cfg -l openocd.log
#	terminal -e openocd -f jtag/debug.cfg
	echo Starting debugger...
	sleep 2
	( $(GDB) -x jtag/gdb.cfg || true ) && sleep 2 && killall openocd
#	( cgdb -d $(GDB) -- -x jtag/gdb.cfg || true ) && sleep 2 && killall openocd


lib/libstm32.a: refresh
	$(MAKE) -C lib

lib/usb/libstm32usb.a: refresh
	$(MAKE) -C lib/usb

clean:
	$(RM) *.o lib/*.o lib/usb/*.o lib/*.a lib/usb/*.a $(TARGET_ELF) $(TARGET_BIN) *.dmp *.map

refresh: ;

.PHONY: refresh all install clean distclean get-device-id prog dump reset debug run-debug-server stop-debug-server
